%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 1         
num_of_cam: 2  

imu_topic: "/imu/data"
image0_topic: "/zed2/camera/left/image_raw"
image1_topic: "/zed2/camera/right/image_raw"
output_path: "/home/max/tmp"

cam0_calib: "cam0_pinhole.yaml"
cam1_calib: "cam1_pinhole.yaml"
image_width: 672
image_height: 376
   

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 1   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.

# body_T_cam0: !!opencv-matrix
#    rows: 4
#    cols: 4
#    dt: d
#    data:   [0.99958975976322017672, 0.017170804625958683,
#               -0.022923255549840760448, -0.0851835233537896739,
#                0.0231465893493554992, -0.01292276982900426,
#               0.99964855695461152696, 0.1257734831824673213,
#              0.016868538110887141801, -0.99976905607667321087,
#            -0.013314913952324877203, 0.075888549707280005484,0.0, 0.0, 0.0, 1.0]

# body_T_cam1: !!opencv-matrix
#    rows: 4
#    cols: 4
#    dt: d
#    data:   [ 9.9971618725690459e-01, 9.9454436695301657e-03,
#             -2.1647934930009227e-02, 2.1160626565556342e-01,
#             2.1740820070310918e-02, -9.3282535133940581e-03,
#             9.9972012104841623e-01, 1.5171555107814688e-01,
#             9.7407227241143209e-03, -9.9990703159674099e-01,
#             -9.5418281375148073e-03, -1.9140752384352994e-01, 0., 0., 0., 1. ]


body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data:   [0.99958975976322017672, 0.017170804625958683,
              -0.022923255549840760448, 0.0851835233537896739,
               0.0231465893493554992, -0.01292276982900426,
              0.99964855695461152696, -0.1257734831824673213,
             0.016868538110887141801, -0.99976905607667321087,
           -0.013314913952324877203, 0.18,0.0, 0.0, 0.0, 1.0]

body_T_cam1: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data:   [ 9.9971618725690459e-01, 9.9454436695301657e-03,
            -2.1647934930009227e-02, -0.0851835233537896739,
            2.1740820070310918e-02, -9.3282535133940581e-03,
            9.9972012104841623e-01, -0.1257734831824673213,
            9.7407227241143209e-03, -9.9990703159674099e-01,
            -9.5418281375148073e-03, 0.18, 0., 0., 0., 1. ]

#Multiple thread support
multiple_thread: 1

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 1.1197412605492375e-02         # accelerometer measurement noise standard deviation. #0.2   0.04
gyr_n: 1.0270904839480961e-02        # gyroscope measurement noise standard deviation.     #0.05  0.004
acc_w: 1.1751767903346351e-04         # accelerometer bias random work noise standard deviation.  #0.02
gyr_w: 9.1355383994881894e-05       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.8         # gravity magnitude

#unsynchronization parameters
estimate_td: 0                      # online estimate time offset between camera and imu
td: 0.0                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "/tmp" # save and load path
save_image: 0                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
